---
import "@/styles/global.css";
import { SITE } from "@/lib/config";
import type { ArticleMeta, Meta } from "@/lib/types";
import StructuredData from "@/components/seo/StructuredData.astro";
import { SEO } from "astro-seo";

type Props = {
  meta: Meta | ArticleMeta;
  article?: any;
  readingTime?: number;
  canonical?: string;
};

const { meta, article, readingTime, canonical } = Astro.props;

const isArticleMeta = (props: Props["meta"]): props is ArticleMeta =>
  props.type === "article";
const canonicalURL = canonical || new URL(Astro.url.pathname, Astro.site).href;

const OGImage = new URL(meta.ogImage, Astro.url).href;
---

<head>
  <!-- üöÄ PR√âCONNEXIONS CRITIQUES EN PREMIER -->
  <link rel="preconnect" href="https://www.googletagmanager.com">
  <link rel="preconnect" href="https://pagead2.googlesyndication.com">
  <link rel="preconnect" href="https://fonts.googleapis.com">
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
  <link rel="preconnect" href="https://cdn.sanity.io">
  <link rel="preconnect" href="https://analytics.ahrefs.com">
  
  <!-- DNS Prefetch pour optimiser encore plus -->
  <link rel="dns-prefetch" href="https://www.google-analytics.com">
  <link rel="dns-prefetch" href="https://www.googletagmanager.com">

  <!-- ‚úÖ META DE BASE TOUJOURS PR√âSENTS -->
  <meta charset={SITE.charset} />
  <meta name="viewport" content="width=device-width,initial-scale=1" />
  <meta name="generator" content={Astro.generator} />
  <meta
    name="robots"
    content="index, follow, max-image-preview:large, max-snippet:-1, max-video-preview:-1"
  />

  <!-- ‚úÖ META DE BASE -->
  <link rel="canonical" href={canonicalURL} />

  <!-- üöÄ PR√âCHARGEMENT CSS CRITIQUE EN PRIORIT√â -->
  <link
    rel="preload"
    href="/_astro/_page_.Cjmaqns_.css"
    as="style"
    onload="this.onload=null;this.rel='stylesheet'"
  />
  <noscript>
    <link rel="stylesheet" href="/_astro/_page_.Cjmaqns_.css" />
  </noscript>

  <!-- üöÄ PR√âCHARGEMENT FONTS CRITIQUES -->
  <link
    rel="preload"
    href="https://fonts.googleapis.com/css2?family=Source+Sans+Pro:wght@400;600;700&family=Source+Serif+4:opsz,wght@8..60,200..900&display=swap"
    as="style"
    onload="this.onload=null;this.rel='stylesheet'"
  />
  <noscript>
    <link
      rel="stylesheet"
      href="https://fonts.googleapis.com/css2?family=Source+Sans+Pro:wght@400;600;700&family=Source+Serif+4:opsz,wght@8..60,200..900&display=swap"
    />
  </noscript>

  <!-- üöÄ PR√âCHARGEMENT WOFF2 CRITIQUE -->
  <link
    rel="preload"
    href="/_astro/source-sa‚Ä¶.tpsLXCSJ.woff2"
    as="font"
    type="font/woff2"
    crossorigin
  />
  <link
    rel="preload"
    href="/_astro/source-sa‚Ä¶.BM2CBz6W.woff2"
    as="font"
    type="font/woff2"
    crossorigin
  />

  <!-- ‚úÖ astro-seo AVEC PROTECTION -->
  {
    meta && meta.title && meta.description ? (
      <SEO
        title={meta.title}
        titleTemplate={`%s | ${SITE.title}`}
        description={meta.description}
        canonical={canonicalURL}
        openGraph={{
          basic: {
            title: meta.metaTitle || meta.title,
            type: meta.type === "article" ? "article" : "website",
            image: OGImage,
            url: canonicalURL,
          },
          optional: {
            description: meta.description,
            siteName: SITE.title,
            locale: "he_IL",
          },
          ...(isArticleMeta(meta) && {
            article: {
              publishedTime: new Date(meta.publishedTime).toISOString(),
              modifiedTime: new Date(meta.lastModified).toISOString(),
              authors: meta.authors.map(
                (author) => `${Astro.site}authors/${author.link}`,
              ),
            },
          }),
        }}
        twitter={{
          card: "summary_large_image",
          site: SITE.title,
          title: meta.metaTitle || meta.title,
          description: meta.description,
          image: OGImage,
          imageAlt: meta.ogImageAlt,
        }}
        extend={{
          meta: [
            {
              name: "google-site-verification",
              content: "7ukDuvGs_biEzOc41_DLPmQotzKzJkrVvpQCKqLoGBM",
            },
            {
              name: "impact-site-verification",
              content: "4698de27-0b12-448d-84b6-e8b7f98bc746",
            },
            { name: "apple-mobile-web-app-title", content: "Astro News" },
            ...(isArticleMeta(meta) && meta.authors
              ? meta.authors.map((author) => ({
                  name: "author",
                  content: author.name,
                }))
              : []),
          ],
          link: [
            {
              rel: "icon",
              type: "image/png",
              href: "/tech_favicon.png",
              sizes: "96x96",
            },
            { rel: "icon", type: "image/svg+xml", href: "/fav.svg" },
            { rel: "shortcut icon", href: "/fav.ico" },
            {
              rel: "apple-touch-icon",
              sizes: "180x180",
              href: "/apple-touch-icon.png",
            },
            { rel: "manifest", href: "/site.webmanifest" },
            { rel: "sitemap", href: "/sitemap-index.xml" },
            {
              rel: "alternate",
              type: "application/rss+xml",
              title: SITE.title,
              href: new URL("rss.xml", Astro.site).href,
            },
          ],
        }}
      />
    ) : (
      <!-- Fallback si astro-seo √©choue -->
      <title>{meta?.title || "Tech Horizons"} | {SITE.title}</title>
      <meta name="description" content={meta?.description || "Tech news and reviews"} />
    )
  }

  {
    isArticleMeta(meta) && article ? (
      <StructuredData article={article} readingTime={readingTime} />
    ) : null
  }

  <!-- üöÄ CSS CRITIQUE INLINE OPTIMIS√â -->
  <style>
    /* Base critique - Compatible Tailwind */
    html { font-size: 16px; }
    @media (min-width: 1024px) { html { font-size: 17px; } }
    
    body {
      font-family: "Source Sans Pro", ui-sans-serif, system-ui, sans-serif;
      -webkit-font-smoothing: antialiased;
      margin: 0;
    }

    /* Styles critiques above-the-fold */
    header { background: #fff; border-bottom: 1px solid #e5e7eb; }
    nav { display: flex; align-items: center; justify-content: space-between; }
    .container { max-width: 1248px; margin: 0 auto; padding: 0 1rem; }
    
    /* Anti-flash */
    .loading { opacity: 0; animation: fadeIn 0.2s ease forwards; }
    @keyframes fadeIn { to { opacity: 1; } }
    
    /* Dark mode critique */
    @media (prefers-color-scheme: dark) {
      header { background: #1f2937; border-bottom-color: #374151; }
    }

    /* Pr√©venire layout shift */
    .font-loading { font-display: swap; }
  </style>

  <!-- üöÄ AHREFS ANALYTICS DIFF√âR√â -->
  <script>
    let ahrefsLoaded = false;

    function loadAhrefs() {
      if (ahrefsLoaded) return;
      ahrefsLoaded = true;

      const ahrefsScript = document.createElement("script");
      ahrefsScript.src = "https://analytics.ahrefs.com/analytics.js";
      ahrefsScript.setAttribute("data-key", "fNbl74Cz0zyN4NtzpNBdKg");
      ahrefsScript.async = true;
      ahrefsScript.defer = true;
      document.head.appendChild(ahrefsScript);

      console.log("‚úÖ Ahrefs Analytics loaded");
    }

    ["scroll", "click", "touchstart", "keydown"].forEach((event) => {
      document.addEventListener(event, loadAhrefs, { once: true });
    });
    setTimeout(loadAhrefs, 3000);
  </script>
</head>