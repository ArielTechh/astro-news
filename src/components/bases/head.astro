---
import "@/styles/global.css";
// Gardons seulement les poids essentiels des polices
import "@fontsource/source-sans-pro/400.css";
import "@fontsource/source-sans-pro/600.css";
import "@fontsource-variable/source-serif-4";

import { ClientRouter } from "astro:transitions";
import { SITE } from "@/lib/config";
import type { ArticleMeta, Meta } from "@/lib/types";
import StructuredData from "@/components/seo/StructuredData.astro";

const GTM_ID = import.meta.env.PUBLIC_GTM_ID || "GTM-PQC6K9BZ";

type Props = {
  meta: Meta | ArticleMeta;
  article?: any;
  readingTime?: number;
};

const { meta, article, readingTime } = Astro.props;

const isArticleMeta = (props: Props["meta"]): props is ArticleMeta =>
  props.type === "article";
const canonicalURL = new URL(Astro.url.pathname, Astro.site).href;
const OGImage = new URL(meta.ogImage, Astro.url).href;
---

<head>
  <!-- Global Metadata -->
  <meta charset={SITE.charset} />
  <meta name="viewport" content="width=device-width,initial-scale=1" />
  <meta name="generator" content={Astro.generator} />

  <!-- PRECONNECT pour améliorer les performances réseau -->
  <link rel="preconnect" href="https://www.googletagmanager.com" />
  <link rel="preconnect" href="https://analytics.ahrefs.com" />

  <!-- Google Search Console Verification -->
  <meta
    name="google-site-verification"
    content="7ukDuvGs_biEzOc41_DLPmQotzKzJkrVvpQCKqLoGBM"
  />
  <meta
    name="impact-site-verification"
    value="4698de27-0b12-448d-84b6-e8b7f98bc746"
  />

  <!-- Favicons -->
  <link rel="icon" type="image/png" href="/tech_favicon.png" sizes="96x96" />
  <link rel="icon" type="image/svg+xml" href="/fav.svg" />
  <link rel="shortcut icon" href="/fav.ico" />
  <link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png" />
  <meta name="apple-mobile-web-app-title" content="Astro News" />
  <link rel="manifest" href="/site.webmanifest" />

  <!-- RSS & Sitemap -->
  <link rel="sitemap" href="/sitemap-index.xml" />
  <link
    rel="alternate"
    type="application/rss+xml"
    title={SITE.title}
    href={new URL("rss.xml", Astro.site)}
  />

  <!-- Canonical URL -->
  <link rel="canonical" href={canonicalURL} />

  <!-- Page Metadata -->
  <title>{meta.title}</title>
  <meta name="title" content={meta.metaTitle} />
  <meta name="description" content={meta.description} />

  <!-- Open Graph / Facebook -->
  <meta property="og:type" content={meta.type} />
  <meta property="og:url" content={canonicalURL} />
  <meta property="og:title" content={meta.metaTitle} />
  <meta property="og:description" content={meta.description} />
  <meta property="og:image" content={OGImage} />
  <meta property="og:image:alt" content={meta.ogImageAlt} />

  <!-- Twitter -->
  <meta property="twitter:site" content={Astro.site} />
  <meta property="twitter:card" content="summary_large_image" />
  <meta property="twitter:url" content={canonicalURL} />
  <meta property="twitter:title" content={meta.metaTitle} />
  <meta property="twitter:description" content={meta.description} />
  <meta property="twitter:image" content={OGImage} />
  <meta property="twitter:image:alt" content={meta.ogImageAlt} />

  {
    isArticleMeta(meta) ? (
      <>
        <meta
          property="article:published_time"
          content={new Date(meta.publishedTime).toISOString()}
        />
        <meta
          property="article:modified_time"
          content={new Date(meta.lastModified).toISOString()}
        />
        {meta.authors.map((author) => (
          <>
            <meta property="author" content={author.name} />
            <meta
              property="article:author"
              content={`${Astro.site}authors/${author.link}`}
            />
          </>
        ))}
      </>
    ) : null
  }

  {
    isArticleMeta(meta) && article ? (
      <StructuredData article={article} readingTime={readingTime} />
    ) : null
  }

  <!-- Scripts analytics différés pour améliorer les performances -->
  <script>
    // Chargement différé des analytics après interaction utilisateur
    function loadAnalytics() {
      // Ahrefs Analytics
      if (!document.querySelector('[data-key="fNbl74Cz0zyN4NtzpNBdKg"]')) {
        var ahrefs = document.createElement("script");
        ahrefs.src = "https://analytics.ahrefs.com/analytics.js";
        ahrefs.setAttribute("data-key", "fNbl74Cz0zyN4NtzpNBdKg");
        ahrefs.async = true;
        document.head.appendChild(ahrefs);
      }

      // Google Analytics
      if (!window.gtag) {
        var gtag = document.createElement("script");
        gtag.async = true;
        gtag.src = "https://www.googletagmanager.com/gtag/js?id=G-E5DDECQEBZ";
        document.head.appendChild(gtag);

        gtag.onload = function () {
          window.dataLayer = window.dataLayer || [];
          function gtag() {
            dataLayer.push(arguments);
          }
          gtag("js", new Date());
          gtag("config", "G-E5DDECQEBZ");
          window.gtag = gtag;
        };
      }
    }

    // Chargement après interaction ou après 1.5 secondes
    document.addEventListener("scroll", loadAnalytics, { once: true });
    document.addEventListener("click", loadAnalytics, { once: true });
    document.addEventListener("touchstart", loadAnalytics, { once: true });
    setTimeout(loadAnalytics, 1500);
  </script>

  <ClientRouter />
</head>
