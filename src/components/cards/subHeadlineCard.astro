---
// src/components/cards/subHeadlineCard.astro
import { Image } from "astro:assets";
import Divider from "@/components/bases/divider.astro";
import { getDateDistance } from "@/lib/utils/date";
import { urlFor } from "@/lib/sanity";

type Props = {
  article: {
    _id: string;
    title: string;
    description: string;
    slug: { current: string };
    cover?: any;
    publishedTime: string;
    categories?: Array<{
      title: string;
      slug: { current: string };
    }>;
  };
  isFirst?: boolean;
  isLast?: boolean;
  // Nouvelles props pour la configuration
  showImage?: boolean;
  showCategory?: boolean;
  showDate?: boolean;
};

const {
  article,
  isLast,
  isFirst,
  showImage = true,
  showCategory = true,
  showDate = true,
} = Astro.props;

// Vérification de sécurité - si pas d'article, ne rien rendre
if (!article) {
  console.error("SubHeadlineCard: Article is undefined");
  return null;
}

// Fonction pour nettoyer le texte hébreu
const cleanHebrewText = (text: string) => {
  if (!text) return text;

  return text
    .replace(/\*\*/g, "") // Supprime les ** (markdown bold)
    .replace(/\*/g, "") // Supprime les * simples
    .replace(/[""]/g, "") // Supprime les guillemets courbes
    .replace(/–/g, "-") // Remplace les tirets longs
    .replace(/…/g, "...") // Remplace les ellipses
    .trim();
};

// Récupérer l'URL de l'image avec Sanity - avec vérifications
const coverImageUrl =
  article?.cover && showImage
    ? urlFor(article.cover).width(320).height(250).url()
    : null;

const category = article?.categories?.[0];
---

<article
  class:list={[
    "group py-2 relative isolate",
    isFirst ? "pt-0" : "pt-2",
    isLast ? "border-b-0 pb-0" : "border-b border-base-300",
  ]}
  dir="rtl"
>
  <!-- Lien principal couvrant tout l'article -->
  <a
    href={`/${article.slug?.current || "#"}`}
    class="flex items-stretch gap-2 focus:outline-none focus:ring-2 focus:ring-primary rounded-lg"
  >
    <!-- Image (à droite en RTL) - conditionnelle -->
    {
      showImage && coverImageUrl && (
        <div class="overflow-hidden w-[165px] h-[125px] md:w-[120px] md:h-full shrink-0 rounded">
          <img
            src={coverImageUrl}
            alt={cleanHebrewText(article.title) || "Article image"}
            loading="eager"
            class="object-cover w-full h-full group-hover:scale-105 transition-transform duration-300"
          />
        </div>
      )
    }

    <!-- Contenu (à gauche en RTL) -->
    <div class="flex flex-col flex-1">
      <div class="flex items-center gap-2 mb-1">
        <div class="flex-1">
          <h3
            class="text-base group-hover:underline mb-1 text-right font-medium leading-tight"
          >
            {cleanHebrewText(article.title) || "Titre non disponible"}
          </h3>
          {
            article.description && (
              <p class="text-sm text-base-content/80 md:line-clamp-2 lg:line-clamp-3 text-right leading-relaxed">
                {cleanHebrewText(article.description)}
              </p>
            )
          }
        </div>
      </div>

      <!-- Métadonnées conditionnelles -->
      {
        (showDate || showCategory) && (
          <div class="flex items-center justify-end text-xs text-base-content/80 mt-1 lg:mt-auto">
            {showDate && article.publishedTime && (
              <span>{getDateDistance(article.publishedTime)}</span>
            )}
            {showDate && showCategory && category && <Divider />}
            {showCategory && category && (
              <span class="text-primary dark:text-secondary">
                {category.title}
              </span>
            )}
          </div>
        )
      }
    </div>
  </a>
</article>
