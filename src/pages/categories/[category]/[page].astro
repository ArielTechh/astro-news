---
// src/pages/categories/[category]/[page].astro - PAGES PAGINATION AVEC STRUCTURED DATA
import type { GetStaticPaths } from "astro";
import { SITE } from "@/lib/config";
import { getAllCategories, getArticlesByCategory } from "@/lib/sanity";
import ListLayout from "@/layouts/list.astro";
import Pagination from "@/components/shared/pagination.astro";
import WideCard from "@/components/cards/wideCard.astro";
import CategoryStructuredData from "@/components/seo/CategoryStructuredData.astro"; // ✨ NOUVEAU

export const getStaticPaths = (async () => {
  const allCategories = await getAllCategories();
  const allPaths = [];

  for (const category of allCategories) {
    const categoryArticles = await getArticlesByCategory(category.slug.current);

    if (categoryArticles.length > SITE.postsPerPage) {
      const totalPages = Math.ceil(categoryArticles.length / SITE.postsPerPage);

      for (let pageNum = 2; pageNum <= totalPages; pageNum++) {
        const startIndex = (pageNum - 1) * SITE.postsPerPage;
        const endIndex = startIndex + SITE.postsPerPage;
        const pageArticles = categoryArticles.slice(startIndex, endIndex);

        allPaths.push({
          params: {
            category: category.slug.current,
            page: pageNum.toString(),
          },
          props: {
            categoryInfo: category,
            articles: pageArticles,
            allArticles: categoryArticles, // ✨ AJOUTÉ pour structured data
            currentPage: pageNum,
            totalPages: totalPages,
            totalArticles: categoryArticles.length,
          },
        });
      }
    }
  }

  return allPaths;
}) satisfies GetStaticPaths;

const {
  categoryInfo,
  articles,
  allArticles,
  currentPage,
  totalPages,
  totalArticles,
} = Astro.props;
const { category } = Astro.params;

const categoryMeta = {
  title: `${categoryInfo.title} - עמוד ${currentPage}`,
  metaTitle: `${categoryInfo.title} - עמוד ${currentPage}`,
  description: `מאמרים בנושא ${categoryInfo.title} - עמוד ${currentPage}`,
  type: "website",
};

const categoryEntry = {
  id: "category-page",
  collection: "views",
  data: categoryMeta,
};

const canonicalUrl = `${SITE.url}/categories/${category}/${currentPage}`;
---

<!-- ✨ STRUCTURED DATA POUR CATÉGORIE PAGINÉE -->
<CategoryStructuredData
  categoryInfo={categoryInfo}
  articles={articles}
  allArticles={allArticles}
  currentPage={currentPage}
  canonicalUrl={canonicalUrl}
/>

<ListLayout
  header={`${categoryInfo.title} - עמוד ${currentPage}`}
  entry={categoryEntry}
  canonical={canonicalUrl}
  customMeta={categoryMeta}
>
  <div dir="rtl">
    <!-- Breadcrumb -->
    {
      categoryInfo?.parent && (
        <nav class="mb-6 text-sm" dir="rtl">
          <a href="/categories" class="text-blue-600 hover:underline">
            כל הקטגוריות
          </a>
          <span class="mx-2">←</span>
          <a
            href={`/categories/${categoryInfo.parent.slug.current}`}
            class="text-blue-600 hover:underline"
          >
            {categoryInfo.parent.title}
          </a>
          <span class="mx-2">←</span>
          <a
            href={`/categories/${categoryInfo.slug.current}`}
            class="text-blue-600 hover:underline"
          >
            {categoryInfo.title}
          </a>
          <span class="mx-2">←</span>
          <span class="text-gray-600">עמוד {currentPage}</span>
        </nav>
      )
    }

    <!-- Compteur -->
    <div class="mb-6 text-sm text-gray-600" dir="rtl">
      <span>{totalArticles} מאמרים בקטגוריה זו</span>
      <span class="mr-4">עמוד {currentPage} מתוך {totalPages}</span>
    </div>

    <!-- Articles -->
    <ul class="flex flex-col gap-2 flex-1">
      {
        articles.map((article, index) => (
          <WideCard article={article} isLast={index === articles.length - 1} />
        ))
      }
    </ul>

    <!-- Pagination -->
    <div dir="ltr" class="mt-8">
      <Pagination
        length={totalPages}
        currentUrl={`/categories/${category}/${currentPage}`}
        currentPage={currentPage}
        baseUrl={`/categories/${category}`}
        prevUrl={currentPage === 2
          ? `/categories/${category}`
          : `/categories/${category}/${currentPage - 1}`}
        nextUrl={currentPage < totalPages
          ? `/categories/${category}/${currentPage + 1}`
          : null}
        lastUrl={`/categories/${category}/${totalPages}`}
      />
    </div>
  </div>
</ListLayout>
