---
// src/pages/[slug].astro
import BaseLayout from "@/layouts/base.astro";
import ContentLayout from "@/layouts/content.astro";
import ArticleHeader from "@/pages/articles/_components/article-header.astro";
import { getAllArticles, getArticleBySlug, urlFor } from "@/lib/sanity";
import StructuredData from "@/components/seo/StructuredData.astro";

export const getStaticPaths = async () => {
  const articles = await getAllArticles();

  return articles.map((article) => ({
    params: { slug: article.slug.current },
    props: { article },
  }));
};

const { article } = Astro.props;

// Récupérer l'article complet avec le contenu
const fullArticle = await getArticleBySlug(article.slug.current);

// Calcul approximatif du temps de lecture
const calculateReadingTime = (content) => {
  if (!content) return 1;

  let wordCount = 0;
  content.forEach((block) => {
    if (block._type === "block" && block.children) {
      block.children.forEach((child) => {
        if (child.text) {
          wordCount += child.text.split(" ").length;
        }
      });
    }
  });

  const wordsPerMinute = 200;
  return Math.ceil(wordCount / wordsPerMinute) || 1;
};

const readingTime = calculateReadingTime(fullArticle.content);
---

<BaseLayout entry={fullArticle} article={fullArticle} readingTime={readingTime}>
  <ArticleHeader article={fullArticle} readingTime={readingTime} />
  <ContentLayout>
    <div class="prose prose-lg lg:prose-2xl max-w-none">
      {
        fullArticle.content &&
          fullArticle.content.map((block, index) => {
            if (block._type === "block") {
              // Récupérer le contenu texte
              const textContent =
                block.children?.map((child) => {
                  let text = child.text || "";

                  // Appliquer le formatage simple
                  if (child.marks?.includes("strong")) {
                    return <strong>{text}</strong>;
                  } else if (child.marks?.includes("em")) {
                    return <em>{text}</em>;
                  } else {
                    return text;
                  }
                }) || [];

              // Rendu basé sur le style
              if (block.style === "h1") {
                return (
                  <h1
                    key={index}
                    class="text-3xl font-bold mt-10 mb-5 text-gray-900"
                  >
                    {textContent}
                  </h1>
                );
              } else if (block.style === "h2") {
                return (
                  <h2
                    key={index}
                    class="text-2xl font-semibold mt-8 mb-4 text-gray-900"
                  >
                    {textContent}
                  </h2>
                );
              } else if (block.style === "h3") {
                return (
                  <h3
                    key={index}
                    class="text-xl font-medium mt-6 mb-3 text-gray-900"
                  >
                    {textContent}
                  </h3>
                );
              } else if (block.style === "h4") {
                return (
                  <h4
                    key={index}
                    class="text-lg font-medium mt-5 mb-2 text-gray-900"
                  >
                    {textContent}
                  </h4>
                );
              } else if (block.style === "h5") {
                return (
                  <h5
                    key={index}
                    class="text-base font-medium mt-4 mb-2 text-gray-900"
                  >
                    {textContent}
                  </h5>
                );
              } else if (block.style === "h6") {
                return (
                  <h6
                    key={index}
                    class="text-sm font-medium mt-3 mb-2 text-gray-900"
                  >
                    {textContent}
                  </h6>
                );
              } else if (block.style === "blockquote") {
                return (
                  <blockquote
                    key={index}
                    class="border-l-4 border-blue-500 pl-6 my-6 italic text-gray-700 bg-gray-50 py-4 rounded-r"
                  >
                    {textContent}
                  </blockquote>
                );
              } else {
                // Paragraphe normal
                return (
                  <p key={index} class="mb-4 leading-relaxed text-gray-800">
                    {textContent}
                  </p>
                );
              }
            }

            if (block._type === "image") {
              try {
                // Vérifier que l'image a un asset valide avant de générer l'URL
                if (block.asset || block._ref) {
                  const imageUrl = urlFor(block).width(800).url();
                  return (
                    <div key={index} class="my-8">
                      <img
                        src={imageUrl}
                        alt={block.alt || "Image de l'article"}
                        class="w-full rounded-lg shadow-md"
                        loading="lazy"
                      />
                    </div>
                  );
                } else {
                  // Image sans asset valide - ne pas la rendre
                  console.warn("Image sans asset trouvée, ignorée:", block);
                  return null;
                }
              } catch (error) {
                // Si erreur dans la génération de l'URL, ne pas rendre l'image
                console.warn("Erreur lors du rendu de l'image:", error, block);
                return null;
              }
            }

            return null;
          })
      }
    </div>
  </ContentLayout>
</BaseLayout>
